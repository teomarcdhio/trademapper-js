#!/usr/bin/env node
// Convert openflights (https://openflights.org/data.html#airport) CSV file to JS;
// at a minimum, the CSV to process needs "ICAO Code" and "IATA Code" columns.
//
// This builds an object with a "icao" and "iata" properties; each of those is
// an object with the port codes as keys from the relevant vocabulary. The
// values for icao are the properties of the port, while the iata codes just
// map to the icao codes.
//
// The output is a JS requirejs definition for the ports data
// (see trademapper/map/ports.js for example).

var fs = require('fs');
var process = require('process');
var path = require('path');

var d3 = require('./trademapper/js/lib/d3.min');


var scriptName = path.basename(process.argv[1]);

if (process.argv.length < 3) {
	console.error('Usage: ' + scriptName + ' <path to openflights csv> <(optional) path to output js>');
	process.exit(1);
}

var ports = {
	icao: {},
	iata: {},
};


var csvParser = d3.dsvFormat(',');
var inFilePath = process.argv[2];
var input = csvParser.parse(fs.readFileSync(inFilePath, 'utf8'));

var outFilePath = process.argv[3] || path.join(path.dirname(process.argv[1]), 'trademapper', 'js', 'map', 'ports.js');

var icaoCode, iataCode;
for (var i = 0; i < input.length; i++) {
	var port = input[i];

	icaoCode = port['ICAO Code'];
	if (icaoCode !== "\\N") {
		ports.icao[icaoCode] = {
			lat: parseFloat(port['Latitude']),
			lon: parseFloat(port['Longitude']),
			name: port['Name'],
			city: port['City'],
			country: port['Country'],
		};

		iataCode = port['IATA Code'];
		if (iataCode !== "\\N" && iataCode !== 'N/A') {
			ports.iata[iataCode] = icaoCode;
		}
	}
}

var outFile = fs.openSync(outFilePath, 'a');
fs.truncateSync(outFile);
fs.writeFileSync(outFile, '// generated by ' + scriptName + '\ndefine(', 'utf8');
fs.writeFileSync(outFile, JSON.stringify(ports), 'utf8');
fs.writeFileSync(outFile, ');', 'utf8');
fs.closeSync(outFile);
